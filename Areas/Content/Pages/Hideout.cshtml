@page
@model HideoutModel
@{
    ViewData["Title"] = "Hideout";
}
<body>
    <h1>Hideout</h1>
    <div class="container">
        <div class="row" id="grid"></div>
    </div>
</body>

<script>
    async function getStations() {
        try {
            const response = await fetch("/Content/Hideout?handler=Stations", {
                method: "GET",
                headers: { "Accept": "application/json" }
            });

            await handleResponse(response);
        }
        catch (error) {
            console.error(error.message);
        }
    }

    async function handleResponse(response) {
        if (response.ok === true) {
            const result = await response.json();

            if (result.success === false && result.redirectUrl) {
                window.location.href = result.redirectUrl;
            }
            else {
                const stations = result.stations;
                grid.innerHTML = '';
                stations.forEach(station => createStation(station));
            }
        }
    }

    function createStation(station) {
        const newCol = document.createElement("div");
        newCol.className = "col-12 col-sm-6 col-md-4 col-lg-3";
        newCol.setAttribute("data-id", station.id);
        const newStation = document.createElement("div");
        newStation.className = "p-3 mb-3 bg-primary text-white text-center";
        newStation.textContent = station.name;

        if (station.maxLevel) {
            const maxLevelDescription = document.createElement("p");
            maxLevelDescription.textContent = "Max level";
            newStation.appendChild(maxLevelDescription);
        }
        else {
            newStation.appendChild(createRequirements(station));
        }

        newStation.appendChild(createLevelDiv(station));
        newCol.appendChild(newStation);
        grid.appendChild(newCol);
    }

    function createRequirements(station) {
        const requirementsDiv = document.createElement("div");
        requirementsDiv.className = station.isAvailable ? "itemRequirementsDiv" : "moduleRequirementsDiv";
        const requires = document.createElement("span");
        requires.textContent = "Requires:";
        requirementsDiv.appendChild(requires);
        let module = station.modules.find(module => module.level === station.level + 1);
        const targetType = station.isAvailable ? "item" : "module";

        if (module !== undefined) {
            module.require.forEach(requirement => {
                if (requirement.type === targetType) {
                    let requirementName = document.createElement("span");
                    requirementName.textContent = targetType === "item" ? requirement.quantity + " " + requirement.name
                        : requirement.name + " level " + requirement.quantity;
                    requirementsDiv.appendChild(requirementName);
                }
            });
        }

        return requirementsDiv;
    }

    function createLevelDiv(station) {
        const levelDiv = document.createElement("div");
        levelDiv.className = "mt-3 d-flex justify-content-center align-items-center";

        const downButton = document.createElement("button");
        downButton.className = "btn btn-light me-2";
        downButton.textContent = "-";
        levelDiv.appendChild(downButton);

        if ((station.name === "Stash" && station.level === 1) || station.level === 0)
            downButton.setAttribute("disabled", '');
        else
            downButton.addEventListener("click", async () => await downgradeStation(station.id));

        const level = document.createElement("span");
        level.className = "mx-2";
        level.textContent = station.level;
        levelDiv.appendChild(level);

        const upButton = document.createElement("button");
        upButton.className = "btn btn-light ms-2";
        upButton.textContent = "+";
        levelDiv.appendChild(upButton);

        if (station.maxLevel || station.isAvailable === false)
            upButton.setAttribute("disabled", '');
        else
            upButton.addEventListener("click", async () => await upgradeStation(station.id));

        return levelDiv;
    }

    async function downgradeStation(stationId) {
        const url = "/Content/Hideout?handler=DowngradeStation";
        await changeStation(stationId, url);
    }

    async function upgradeStation(stationId) {
        const url = "/Content/Hideout?handler=UpgradeStation";
        await changeStation(stationId, url);
    }

    async function changeStation(stationId, url) {
        try {
            const response = await fetch(url, {
                method: "POST",
                headers: {
                    "Accept": "application/json",
                    "Content-Type": "application/json",
                    "RequestVerificationToken": document.getElementById('antiForgeryToken').value
                },
                body: stationId
            });

            await handleResponse(response);
        }
        catch (error) {
            console.error(error.message);
        }
    }

    const grid = document.getElementById("grid");
    getStations();
</script>
